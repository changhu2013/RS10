<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEACACoCAAAFgAAACgAAAAgAAAAQAAAAAEACAAAAAAAAAQAABILAAASCwAAAAEAAAAB
        AAC3ikgAilMDAI5YCACodCcAqXQnALB9MQCucRUAsHwwALF6KQCUXxAAtoM4AIlVCACcZxoA9+/jAMmV
        SgCmcycAvYtAAItVBQCreCwAcUcKAMeUSgC3hDkAw5FGAKJuIgChbB4A5tfBAO/o3QC6fCEAl2ETAL6K
        PwC9ij8AaD4DANWzgwDLlksAflsoANS0hQCYYxQAjlcIALCRYgD+/v4AqXYrAKp3KwCodCkAzKx9AMuX
        TACSWwkAlmESALSCNgDgxJoAyJdPAOvYvACiZAsA9u7iAMCNQwCQWQsAkV8VALZyDgDGjTwAkFkKAMif
        ZQC4hjsAom0fAJhnHwCoejYArXYpAMaibQD07OEAw5ZUALOANQDAgykA17J8APLm1ACldDAA6NrFAN3K
        rgDaxKUAyaZ0AJVkHQDVu5QAeE0OANvEowCRXxgAw5BGAKpvGAD48ugA6N3NAKd0KQDhzbEA6uDRAMCR
        TQCuei4A59jCAIBbJgCSai8Ax5lUAMGPRAC5jk4AupBRALKSYgCFWRkA59zMAP/+/gDy6t8AilQEAOzj
        1QDk0bUAj1gIALdyDgCHVAkAxpRKAM+xhQDFl1UA8+7mAMakcQC2gDUAk10PALqHOwCSWwoA38OZAKFs
        HwCMVwkA/fv4AP369wDcvI4AtYE1ALOHRwDt38sA1q93AIxVBQDQs4gA3MenAPTp2QCxcxYAunkZAPv5
        9gDTrXYAsn4yAJRdDgB4UBYAwItAAMGPRQDLmE4A3M23AIdTBwDFk0sA5NO7AKVnCwD+/v0At4Q4AI5a
        DgDCkEYA7OXaAO3l2gCPWQkAzKx+ALKDPwCxfTAAtoM3AMWbXgC4hToAwpxkAJRhFgCxfjIA/v38APz5
        9ADt5dkAq3gtAPn07gDOr4EA9OvfALyJPgDSto0Awo9EAK97LwCGUwcAoWkXAJ5pGwDv38gA5s6rAMKp
        hQD18ewAnmgaALhzDgClcSUAr4VHAOfSswDixp8AvZVbAK+KVAC3gzgA7+bYAKZyJgCtbAsAwoMlAIlS
        AgDIlkwAp3QoAP///wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcUEwsLCxcXCwgmfxMTExAXCwsLFxcXF
        flkdcip9vsXFxcMEwsLFxcICLzzExMTEwwXCwsXFZTsOvT5Nla4LuMXFw8MEwsXFAUQpFcTExMTDwwXC
        xcWLIZ5wxcXFuVNqP8XDw8MExcWiEsQVxMTExMPDwwXFh0VGxQDFxWZBDRszS8PDw8PFxYwQEJalxcVV
        w8PDw5OFOXrFAMXFgqvFRzhAw8PDw8XFw8PDw8XFxcXDw8PDsbZ/xcUAxYagGcXFUYTDw8PDxcXDw8PD
        xcXFxcPDw8N7a7LFxQBhYJonxcVcN8PDw8PFxcPDw8PFxcXFw8PDw3aSMMXFAMWnKxnFxSIfw8PDw8XF
        w8PDw8XFxcXDw8PDgy2QxcUAxcVJqMXFik+tw8PDxcXDw8PDGsXFaMPDw8PFr3WpxQBbkUxQxUITXWd0
        w8PFxQfDw8PExMTExMTEA8VpC6GYTm6BV6MNmxOXwpmsw8XFwgfDw8TExMTExAPCxcVxj2xijrSkuo1j
        JsXCwhwUxcXCwgfDxMTExMQDwsLFxcUjiFamCg4sSLPFxcLCwj3FxcLCwgfExMTEA8LCwsXFxcVUIG9D
        u0rFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXFxcXF
        xcXFxcXFxcXFxcHBwcHFxcXFMsPDw8NawsXFDMTExMTExMTExMSqLsLCwcHBwcXFxTQxw8PDfAHCxcUB
        F8TExMTExMTExMNSJMLBwcHBxcV5XsPDwx4RvGTFxcIlD8TExMTExMTEw8MUGMHBwcHFxZzDw8NfOnjF
        xcXFwsIJxMTExMTExMTDw8PDwcHBwcXFEsTExMTExHPCxcXFxcXFxcXFxcXFGsPDw8PBwcHBxcU2KMTE
        xMTEv4DFxcIClMTExMTExMTEw8PDw8HBwcHFxcJ3xMTExMTEt8XFsBbDxMTExMTExMTDw20YwcHBwcXF
        xcXFxcXDw8PDxcXDw8PExMTExMTExMM1icLBwcHBxcXFxcXFxcPDw8PFxcPDw8TExMTExMTEnRHCwsHB
        wcHFxcXFxcXFw8PDw8XFw8PDWMXFxcXFxcXFxcXFBsHBwcDAwMDAwMDDw8MIxcXDw8PExMTExMTExMTE
        xAzCBsHBwMDAwMDAwMPDCMLFxcPDw8TExMTExMTExMQXAcLCBsHAwMDAwMDAwwjCwsXFtRbDxMTExMTE
        xMTEDwLCwsLCBsDAwMDAwMAIwsLCxcXCAgrExMTExMTExMQJwsLFxcXFxcXFxcXFxcXFxcXFxcXFxcXF
        xcXFxcXFxcXFxf////8MADwHDAAwAwwAMOEMACLADBgCyAw8BowMPAYMDDwGjAw8BswMGCIIDAAgAAwA
        MAEMADgDDAA8D///////////DwGAAA4BgAAMAYAADAeAAAwB/+AMAYAADAGAAA/hgAAP4YAAD+GH/wAB
        gAAAAYAAAAGAAAABgAD/////
</value>
  </data>
</root>